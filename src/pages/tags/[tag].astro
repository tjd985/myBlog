---
import BaseLayout from '@layouts/BaseLayout.astro';
import BlogPost from '@components/BlogPost.astro';
import type { MarkdownInstance } from 'astro';
import type { FrontMatter } from '@type/FrontMatter';

export async function getStaticPaths() {
  const allPosts = Object.values(
    import.meta.glob<MarkdownInstance<FrontMatter>>('@pages/posts/*.md', {
      eager: true,
    })
  );

  const allTagList = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];

  return allTagList.map((postTag) => {
    const filteredPost = allPosts.filter((post) =>
      post.frontmatter.tags.includes(postTag)
    );

    return {
      params: { tag: postTag },
      props: { posts: filteredPost },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      posts.map(({ url, frontmatter }) => (
        <BlogPost url={url} frontmatter={frontmatter} />
      ))
    }
  </ul>
</BaseLayout>
